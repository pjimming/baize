syntax = "v1"

info(
	title: "local"
	desc: "get local project dependence info"
	author: "panjiangming"
	email: "panjm2001@126.com"
	version: "v1"
)

type (
	CommonDirReq {
		Dir string `form:"dir"`
	}

	CommonModulePathReq {
		ModulePath string `form:"modulePath"`
	}

	GetModuleInfoResp {
		ModulePath    string `json:"modulePath"`
		ModuleName    string `json:"moduleName"`
		ModuleVersion string `json:"moduleVersion"`
	}

	OtherPkgItem {
		Name    string `json:"name"`
		Version string `json:"version"`
	}

	GetPackagesResp {
		OtherPkgList    []*OtherPkgItem `json:"otherPkgList"`
		OtherPkgCount   uint            `json:"otherPkgCount"`
		ProjectPkgList  []string        `json:"projectPkgList"`
		ProjectPkgCount uint            `json:"projectPkgCount"`
	}

	GoFileItem {
		Name string `json:"name"`
		Size int64  `json:"size"`
	}

	GetGoFilesResp {
		GoFileList  []*GoFileItem `json:"goFileList"`
		GoFileCount uint          `json:"goFileCount"`
	}

	GraphNode {
		Id    string `json:"id"`
		Label string `json:"label"`
	}

	GraphEdge {
		Source string `json:"source"`
		Target string `json:"target"`
	}

	GenerateGraphResp {
		Nodes []*GraphNode `json:"nodes"`
		Edges []*GraphEdge `json:"edges"`
	}
)

@server(
	group: local
)
service core-api {
	@doc "获取go.mod信息"
	@handler GetModuleInfo
	get /baize/v1/local/module (CommonDirReq) returns (GetModuleInfoResp)
	
	@doc "获取包列表"
	@handler GetPackages
	get /baize/v1/local/packages (CommonDirReq) returns (GetPackagesResp)
	
	@doc "获取go文件列表"
	@handler GetGoFiles
	get /baize/v1/local/file (CommonDirReq) returns (GetGoFilesResp)
	
	@doc "生成有向依赖图"
	@handler GenerateGraph
	get /baize/v1/local/graph (CommonDirReq) returns (GenerateGraphResp)
}